script "rigAppDB"
##
# revIgniter
#
# An application development framework for LiveCode
# modeled on CodeIgniter
#
# @package		revIgniter
# @author		  rabit@revigniter.com
# @copyright	Copyright (c) 2009 - 2016, dimensionB Bitter u. Bitter GmbH
# @license		http://revigniter.com/userGuide/license.html
# @link		    http://revigniter.com/
##

## ------------------------------------------------------------------------

##
# Initialize the database
#
#
# @package		revIgniter
# @subpackage	Database
# @category	  Database
# @author		  rabit@revigniter.com
# @link		    http://revigniter.com/userGuide/database/
##



# DECLARE VARIABLES
local sDBBASEPATH
local sDBAPPPATH
local sDBEXT
local sActiveRecord
local sDatabaseID

/*
* Get sDBBASEPATH
*/
function dbBASEPATH
   return sDBBASEPATH
end dbBASEPATH

/*
* Get sDBAPPPATH
*/
function dbAPPPATH
   return sDBAPPPATH
end dbAPPPATH

/*
* Get sDBEXT
*/
function dbEXT
   return sDBEXT
end dbEXT

/*
* Get sActiveRecord
*/
function dbActiveRecord
   return sActiveRecord
end dbActiveRecord

/*
* Get sDatabaseID
*/
function dbDatabaseID
   return sDatabaseID
end dbDatabaseID

/*
* Sets the Database ID
*/
command rigSetDatabaseID pID
   put pID into sDatabaseID
end rigSetDatabaseID


/*----------------------------------------------------------------------
--| FUNCTION libraryScript
--|
--| Author: Bob Hall
--| Version:  1.0
--| Created: 01-02-17
--| Last Mod: 01-02-17
--| Requires: rigDB()
--|
--| Summary: Libary Initialization
--| 
--|----------------------------------------------------------------------*/

on libraryStack
   
   // only execute when this library is loaded
   if the short name of me is not the short name of target then 
      pass libraryStack
   end if
   
   # set the defaultFolder to the folder containing the stackfile
   set the itemDelimiter to slash
   get the effective filename of this stack
   put it into tPath
   put item 1 to -2 of tPath & "/" into sDBAPPPATH
   put item 1 to -3 of tPath & "/" into gBASEPATH
   put ".livecodescript" into sDBEXT
   
   // Load common library
   start using dbAPPPATH() & "rigAppDBCommon" & dbEXT()
end libraryStack




/*----------------------------------------------------------------------
--| FUNCTION rigLoadDatabase
--|
--| Author: rabit
--| Version:  1.2
--| Created: 04-07-09
--| Last Mod: 16-07-11
--| Requires: rigDB()
--|
--| Summary: Database Loader
--| 
--| Format:  rigLoadDatabase(param1, param2, param3)
--|
--| Parameters: string <pParams> the DB credentials, bool <pReturn>,  bool <pActiveRecord> whether to enable
--|                       active record (this allows us to override the config setting).
--|
--| Return: mixed
----------------------------------------------------------------------*/

function rigLoadDatabase pParams pReturn pActiveRecord
   if pActiveRecord is empty then
      put FALSE into tActiveRecord
   else
      put pActiveRecord into tActiveRecord
   end if

   /*
   # DO WE EVEN NEED TO LOAD THE DATABASE LIBRARY?
   if sRiDBlibLoaded is  not True then
      require gBASEPATH & "database/DB" & gEXT
   else
      return FALSE
   end if
   
   put TRUE into sRiDBlibLoaded
   */
   
   put rigDB(pParams, tActiveRecord) into tDBresult
   
   if pReturn is TRUE then
      return tDBresult
   end if
end rigLoadDatabase




/*----------------------------------------------------------------------
--| FUNCTION rigDB
--|
--| Author: rabit
--| Version:  1.3
--| Created: 04-07-09
--| Last Mod: 17-09-15
--| Requires: rigFetchDBsettingsAll(), rigShowError, rigFetchActiveGroup(), _rigParseURL,
--| 					_rigParseQueryStr, rigDbDriver, rigFetchDBdriverSetting(), rigDbInitialize()
--|
--| Summary: Initialize the database.
--| 
--| Format:  rigDB(param1, param2)
--|
--| Parameters: string <pParams> the DB credentials, bool <pActiveRecordOverride> whether to enable
--|                       active record (this allows us to override the config setting).
--|
--| Return: mixed
----------------------------------------------------------------------*/

function rigDB pParams pActiveRecordOverride
   # LOAD THE DB CONFIG FILE IF A DSN STRING WASN'T PASSED
   if (pParams is not a boolean) and (pParams is not a number) and (pParams is not an array) and (offset("://", pParams) = 0) then
      ##require gAPPPATH & "config/database" & gEXT
      start using dbAPPPATH() & "config/database" & dbEXT()
      
      put rigFetchDBsettingsAll() into tDBsettings
      
      if tDBsettings is not an array then
         rigShowError "No database connection settings were found in the database config file."
      end if
      
      if pParams <> "" then
         put pParams into tActiveGroup
      else
         put rigFetchActiveGroup() into tActiveGroup
      end if
      	
      if tDBsettings[tActiveGroup] is not an array then
         rigShowError "You have specified an invalid database connection group."
      end if
      
      put tDBsettings[tActiveGroup] into tParams
      /***************
      COMING BACK TO THIS
   else if (pParams is not a boolean) and (pParams is not a number) and (pParams is not an array) then
      ## 
      # PARSE THE URL FROM THE DSN STRING
      #  DATABASE SETTINGS CAN BE PASSED AS DISCREET
      #  PARAMETERS OR AS A DATA SOURCE NAME IN THE FIRST
      #  PARAMETER. DSNs MUST HAVE THIS PROTOTYPE:
      #  PUT "DRIVER://USERNAME:PASSWORD@HOSTNAME/DATABASE" INTO DSN
      ##
      put _rigParseURL(pParams) into tDSN
      if tDSN is not an array then
         rigShowError "Invalid DB Connection String"
      end if
      
      put tDSN["scheme"] into tDSN["dbdriver"]
      put URLDecode(tDSN["host"]) into tDSN["host"]
      put URLDecode(tDSN["user"]) into tDSN["user"]
      put URLDecode(tDSN["pass"]) into tDSN["pass"]
      		
      put tDSN["path"] into tPath
      put char 2 to -1 of tPath into tPathToDecode
      put URLDecode(tPathToDecode) into tPathDecoded
      put tPathDecoded into tDSN["path"]
      		
      put tDSN["scheme"] into tParams["dbdriver"]
      put tDSN["host"] into tParams["hostname"]
      put tDSN["user"] into tParams["username"]
      put tDSN["pass"] into tParams["password"]
      put tDSN["path"] into tParams["database"]
      
      # WERE ADDITIONAL CONFIG ITEMS SET?
      if tDSN["query"] is not "" then
         put _rigParseQueryStr(tDSN["query"]) into tExtra
         			
         repeat for each key tKey in tExtra
            # BOOLEANS PLEASE
            if toUpper(tExtra[tKey]) is "TRUE" then
               put TRUE into tExtra[tKey]
            end if
            if toUpper(tExtra[tKey]) is "FALSE" then
               put FALSE into tExtra[tKey]
            end if
            
            put tExtra[tKey] into tParams[tKey]
         end repeat
      end if
      */
      
   end if
   	
   if tParams is empty then
      put pParams into tParams
   end if
   
   # NO DB SPECIFIED YET?  BEAT THEM SENSELESS...
   if tParams["dbdriver"] is "" then
      rigShowError "You have not selected a database type to connect to."
   end if
   
   # LOAD THE DB LIBRARIES.  NOTE: SINCE THE ACTIVE RECORD LIBRARY IS OPTIONAL
   # WE NEED TO DYNAMICALLY LOAD THE PROPER LIBRARIES
   # BASED ON WHETHER WE'RE USING THE ACTIVE RECORD LIBRARY OR NOT.
   IF pActiveRecordOverride is TRUE then
      put TRUE into sActiveRecord
   end if
   if sActiveRecord is empty then
      put TRUE into sActiveRecord
   end if
   
   # LOAD DATABASE DRIVER LIBRARY
   ##require gBASEPATH & "database/DBdriver" & gEXT
   start using dbBASEPATH() & "database/rigAppDBdriver" & dbEXT()
   
   # SET THE DATABASE DRIVER LIBRARY VARIABLES VALUES
   rigDbDriver tParams
   
   if sActiveRecord is TRUE then
      //require gBASEPATH & "database/DBactiveRec" & gEXT
      start using dbBASEPATH() & "database/rigAppDBactiveRec" & dbEXT()
   end if
   
   //require gBASEPATH & "database/drivers/" & tParams["dbdriver"] & "/" & tParams["dbdriver"] & "Driver" & gEXT
   start using dbBASEPATH() & "database/drivers/" & tParams["dbdriver"] & "/rigApp" & tParams["dbdriver"] & "Driver" & dbEXT()
   	
   if rigFetchDBdriverSetting("autoinit") is TRUE then
      get rigDbInitialize()
   end if
   
   return sDatabaseID
end rigDB



--| END OF DB.lc
--| Location:  ./system/database/DB.lc
----------------------------------------------------------------------
